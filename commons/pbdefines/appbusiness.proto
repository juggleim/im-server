syntax = "proto3";

option go_package = "commons/pbdefines/pbobjs";
import "commons/pbdefines/appmessages.proto";

message GroupInviteReq{
    string group_id = 1;
    repeated string member_ids = 2;
}

message GroupInviteResp{
    map<string,GrpInviteResultReason> results = 1;
}

enum GrpInviteResultReason{
    InviteSucc = 0;
    InviteSendOut = 1;
    InviteDecline = 2;
    InviteRepeated = 3;
}

message GroupInfoListReq {
    int64 limit = 1;
    string offset = 2;
}

message GroupInfoListResp {
    repeated GrpInfo items = 1;
    string offset = 2;
}

message GrpInfo{
    string group_id = 1;
    string group_name = 2;
    string group_portrait = 3;
    repeated GroupMemberInfo members = 4;
    int32 member_count = 5;
    GroupMemberInfo owner = 6;
    GrpMemberRole my_role = 7;
    GroupManagement group_management = 8;
    string grp_display_name = 9; 
}

enum GrpMemberRole{
    GrpMember = 0;
    GrpCreator = 1;
    GrpAdmin = 2;
    GrpNotMember = 3;
}

message GroupManagement{
    string group_id = 1;
    int32 group_mute = 2;
    int32 max_admin_count = 3;
    int32 admin_count = 4;
    int32 group_verify_type = 5;
    int32 group_his_msg_visible = 6;
}

message GroupMemberInfo {
    string user_id = 1;
    string nickname = 2;
    string avatar = 3;
    UserType member_type = 4;
    GrpMemberRole role = 5;
}

message GroupMemberInfos{
    repeated GroupMemberInfo items = 1;
    string offset = 2;
}

message GrpAnnouncement{
    string groupId = 1;
    string content = 2;
}

message GroupOwnerChgReq {
    string group_id = 1;
    string owner_id = 2;
}

message SetGroupMuteReq {
    string group_id = 1;
    int32 is_mute = 2;
}

message SetGroupVerifyTypeReq{
    string group_id = 1;
    int32 verify_type = 2;
}

message SetGroupHisMsgVisibleReq{
    string group_id = 1;
    int32 group_his_msg_visible = 2;
}

message GroupAdministratorsReq{
    string group_id = 1;
    repeated string admin_ids = 2;
}

message GroupAdministratorsResp{
    string group_id = 1;
    repeated GroupMemberInfo items = 2;
}

message SetGroupDisplayNameReq{
    string group_id = 1;
    string grp_display_name = 2;
}

message QryGrpApplicationsReq{
    int64 start_time = 1;
    int32 count = 2;
    int32 order = 3;
    string group_id = 4;
}

message QryGrpApplicationsResp{
    repeated GrpApplicationItem items=1;
}

message GrpApplicationItem{
    GrpInfo grp_info = 1;
    int32 apply_type = 2;
    UserObj sponsor = 3;
    UserObj recipient = 4;
    UserObj inviter = 5;
    UserObj operator = 6;
    int64 apply_time = 7;
    int32 status = 8;
}

message SearchUserReq {
    string account = 1;
}

message FriendListReq {
    int64 limit = 1;
    string offset = 2;
}

message FriendListWithPageReq{
    int64 page = 1;
    int64 size = 2;
    string order_tag = 3;
}

message ApplyFriend{
    string friend_id = 1;
}

message ConfirmFriend{
    string sponsor_id = 1;
    bool is_agree = 2;
}

message QryFriendApplicationsReq{
    int64 start_time = 1;
    int32 count = 2;
    int32 order = 3;
}

message QryFriendApplicationsResp{
    repeated FriendApplicationItem items=1;
}

message FriendApplicationItem{
    UserObj recipient = 1;
    UserObj sponsor = 2;
    UserObj target_user = 3;
    bool is_sponsor = 4; 
    int32 status = 5;
    int64 apply_time = 6;
}

message UserObj{
    string user_id = 1;
    string nickname = 2;
    string avatar = 3;
    string pinyin = 4;
    UserType user_type = 5;
    string phone = 6;
    int32 status = 7;
    bool is_friend = 8;
    UserSettings settings = 9;
}

message UserObjs{
    repeated UserObj items = 1;
    string offset = 2;
}

enum FriendVerifyType{
    NeedFriendVerify = 0;
    NoNeedFriendVerify = 1;
    DeclineFriend = 2;
}

enum GrpVerifyType{
    NoNeedGrpVerify = 0;
    NeedGrpVerify = 1;
    DeclineGroup = 2;
}

message UserSettings{
    string language = 1;
    FriendVerifyType friend_verify_type = 2;
    GrpVerifyType grp_verify_type = 3;
    string undisturb = 4;
}

//bots
message QryAiBotsReq{
    int64 limit = 1;
    string offset = 2;
}

message AiBotInfo {
    string bot_id = 1;
    string nickname = 2;
    string avatar = 3;
    int32 bot_type = 4;
}

message AiBotInfos{
    repeated AiBotInfo items =1;
    string offset = 2;
}

message ApiKey{
    string appkey = 1;
    int64 created_time = 2;
}