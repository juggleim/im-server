// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.5.0
// source: sensitive.proto

package pbobjs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensitiveHandlerType int32

const (
	SensitiveHandlerType_pass    SensitiveHandlerType = 0
	SensitiveHandlerType_deny    SensitiveHandlerType = 1
	SensitiveHandlerType_replace SensitiveHandlerType = 2
)

// Enum value maps for SensitiveHandlerType.
var (
	SensitiveHandlerType_name = map[int32]string{
		0: "pass",
		1: "deny",
		2: "replace",
	}
	SensitiveHandlerType_value = map[string]int32{
		"pass":    0,
		"deny":    1,
		"replace": 2,
	}
)

func (x SensitiveHandlerType) Enum() *SensitiveHandlerType {
	p := new(SensitiveHandlerType)
	*p = x
	return p
}

func (x SensitiveHandlerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensitiveHandlerType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensitive_proto_enumTypes[0].Descriptor()
}

func (SensitiveHandlerType) Type() protoreflect.EnumType {
	return &file_sensitive_proto_enumTypes[0]
}

func (x SensitiveHandlerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SensitiveHandlerType.Descriptor instead.
func (SensitiveHandlerType) EnumDescriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{0}
}

type SensitiveWordType int32

const (
	SensitiveWordType_invalid_word SensitiveWordType = 0
	SensitiveWordType_deny_word    SensitiveWordType = 1
	SensitiveWordType_replace_word SensitiveWordType = 2
)

// Enum value maps for SensitiveWordType.
var (
	SensitiveWordType_name = map[int32]string{
		0: "invalid_word",
		1: "deny_word",
		2: "replace_word",
	}
	SensitiveWordType_value = map[string]int32{
		"invalid_word": 0,
		"deny_word":    1,
		"replace_word": 2,
	}
)

func (x SensitiveWordType) Enum() *SensitiveWordType {
	p := new(SensitiveWordType)
	*p = x
	return p
}

func (x SensitiveWordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensitiveWordType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensitive_proto_enumTypes[1].Descriptor()
}

func (SensitiveWordType) Type() protoreflect.EnumType {
	return &file_sensitive_proto_enumTypes[1]
}

func (x SensitiveWordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SensitiveWordType.Descriptor instead.
func (SensitiveWordType) EnumDescriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{1}
}

type CommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonReq) Reset() {
	*x = CommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReq) ProtoMessage() {}

func (x *CommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReq.ProtoReflect.Descriptor instead.
func (*CommonReq) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{0}
}

type SensitiveFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SensitiveFilterReq) Reset() {
	*x = SensitiveFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveFilterReq) ProtoMessage() {}

func (x *SensitiveFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveFilterReq.ProtoReflect.Descriptor instead.
func (*SensitiveFilterReq) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{1}
}

func (x *SensitiveFilterReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SensitiveFilterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandlerType  SensitiveHandlerType `protobuf:"varint,1,opt,name=handler_type,json=handlerType,proto3,enum=SensitiveHandlerType" json:"handler_type,omitempty"`
	FilteredText string               `protobuf:"bytes,2,opt,name=filtered_text,json=filteredText,proto3" json:"filtered_text,omitempty"`
}

func (x *SensitiveFilterResp) Reset() {
	*x = SensitiveFilterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveFilterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveFilterResp) ProtoMessage() {}

func (x *SensitiveFilterResp) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveFilterResp.ProtoReflect.Descriptor instead.
func (*SensitiveFilterResp) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{2}
}

func (x *SensitiveFilterResp) GetHandlerType() SensitiveHandlerType {
	if x != nil {
		return x.HandlerType
	}
	return SensitiveHandlerType_pass
}

func (x *SensitiveFilterResp) GetFilteredText() string {
	if x != nil {
		return x.FilteredText
	}
	return ""
}

type AddSensitiveWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []*SensitiveWord `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *AddSensitiveWordsReq) Reset() {
	*x = AddSensitiveWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSensitiveWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSensitiveWordsReq) ProtoMessage() {}

func (x *AddSensitiveWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSensitiveWordsReq.ProtoReflect.Descriptor instead.
func (*AddSensitiveWordsReq) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{3}
}

func (x *AddSensitiveWordsReq) GetWords() []*SensitiveWord {
	if x != nil {
		return x.Words
	}
	return nil
}

type DelSensitiveWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *DelSensitiveWordsReq) Reset() {
	*x = DelSensitiveWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSensitiveWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSensitiveWordsReq) ProtoMessage() {}

func (x *DelSensitiveWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSensitiveWordsReq.ProtoReflect.Descriptor instead.
func (*DelSensitiveWordsReq) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{4}
}

func (x *DelSensitiveWordsReq) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type SensitiveFilterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandlerType SensitiveHandlerType `protobuf:"varint,1,opt,name=handler_type,json=handlerType,proto3,enum=SensitiveHandlerType" json:"handler_type,omitempty"`
	ReplaceChar string               `protobuf:"bytes,2,opt,name=replace_char,json=replaceChar,proto3" json:"replace_char,omitempty"`
}

func (x *SensitiveFilterConfig) Reset() {
	*x = SensitiveFilterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveFilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveFilterConfig) ProtoMessage() {}

func (x *SensitiveFilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveFilterConfig.ProtoReflect.Descriptor instead.
func (*SensitiveFilterConfig) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{5}
}

func (x *SensitiveFilterConfig) GetHandlerType() SensitiveHandlerType {
	if x != nil {
		return x.HandlerType
	}
	return SensitiveHandlerType_pass
}

func (x *SensitiveFilterConfig) GetReplaceChar() string {
	if x != nil {
		return x.ReplaceChar
	}
	return ""
}

type QrySensitiveWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Word   string `protobuf:"bytes,5,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *QrySensitiveWordsReq) Reset() {
	*x = QrySensitiveWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrySensitiveWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrySensitiveWordsReq) ProtoMessage() {}

func (x *QrySensitiveWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrySensitiveWordsReq.ProtoReflect.Descriptor instead.
func (*QrySensitiveWordsReq) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{6}
}

func (x *QrySensitiveWordsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QrySensitiveWordsReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QrySensitiveWordsReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QrySensitiveWordsReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *QrySensitiveWordsReq) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type QrySensitiveWordsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Words []*SensitiveWord `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *QrySensitiveWordsResp) Reset() {
	*x = QrySensitiveWordsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrySensitiveWordsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrySensitiveWordsResp) ProtoMessage() {}

func (x *QrySensitiveWordsResp) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrySensitiveWordsResp.ProtoReflect.Descriptor instead.
func (*QrySensitiveWordsResp) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{7}
}

func (x *QrySensitiveWordsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QrySensitiveWordsResp) GetWords() []*SensitiveWord {
	if x != nil {
		return x.Words
	}
	return nil
}

type SensitiveWord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Word     string            `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	WordType SensitiveWordType `protobuf:"varint,3,opt,name=wordType,proto3,enum=SensitiveWordType" json:"wordType,omitempty"`
}

func (x *SensitiveWord) Reset() {
	*x = SensitiveWord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWord) ProtoMessage() {}

func (x *SensitiveWord) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWord.ProtoReflect.Descriptor instead.
func (*SensitiveWord) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{8}
}

func (x *SensitiveWord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SensitiveWord) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SensitiveWord) GetWordType() SensitiveWordType {
	if x != nil {
		return x.WordType
	}
	return SensitiveWordType_invalid_word
}

var File_sensitive_proto protoreflect.FileDescriptor

var file_sensitive_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x28,
	0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x74, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x38, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0x3c,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x22, 0x80, 0x01, 0x0a, 0x14, 0x51, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x51, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x37, 0x0a,
	0x14, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x10, 0x02, 0x2a, 0x46, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x64, 0x65, 0x6e, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x02, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x62, 0x6f, 0x62, 0x6a, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sensitive_proto_rawDescOnce sync.Once
	file_sensitive_proto_rawDescData = file_sensitive_proto_rawDesc
)

func file_sensitive_proto_rawDescGZIP() []byte {
	file_sensitive_proto_rawDescOnce.Do(func() {
		file_sensitive_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensitive_proto_rawDescData)
	})
	return file_sensitive_proto_rawDescData
}

var file_sensitive_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sensitive_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sensitive_proto_goTypes = []interface{}{
	(SensitiveHandlerType)(0),     // 0: SensitiveHandlerType
	(SensitiveWordType)(0),        // 1: SensitiveWordType
	(*CommonReq)(nil),             // 2: CommonReq
	(*SensitiveFilterReq)(nil),    // 3: SensitiveFilterReq
	(*SensitiveFilterResp)(nil),   // 4: SensitiveFilterResp
	(*AddSensitiveWordsReq)(nil),  // 5: AddSensitiveWordsReq
	(*DelSensitiveWordsReq)(nil),  // 6: DelSensitiveWordsReq
	(*SensitiveFilterConfig)(nil), // 7: SensitiveFilterConfig
	(*QrySensitiveWordsReq)(nil),  // 8: QrySensitiveWordsReq
	(*QrySensitiveWordsResp)(nil), // 9: QrySensitiveWordsResp
	(*SensitiveWord)(nil),         // 10: SensitiveWord
}
var file_sensitive_proto_depIdxs = []int32{
	0,  // 0: SensitiveFilterResp.handler_type:type_name -> SensitiveHandlerType
	10, // 1: AddSensitiveWordsReq.words:type_name -> SensitiveWord
	0,  // 2: SensitiveFilterConfig.handler_type:type_name -> SensitiveHandlerType
	10, // 3: QrySensitiveWordsResp.words:type_name -> SensitiveWord
	1,  // 4: SensitiveWord.wordType:type_name -> SensitiveWordType
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_sensitive_proto_init() }
func file_sensitive_proto_init() {
	if File_sensitive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sensitive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveFilterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSensitiveWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSensitiveWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveFilterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrySensitiveWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrySensitiveWordsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensitive_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sensitive_proto_goTypes,
		DependencyIndexes: file_sensitive_proto_depIdxs,
		EnumInfos:         file_sensitive_proto_enumTypes,
		MessageInfos:      file_sensitive_proto_msgTypes,
	}.Build()
	File_sensitive_proto = out.File
	file_sensitive_proto_rawDesc = nil
	file_sensitive_proto_goTypes = nil
	file_sensitive_proto_depIdxs = nil
}
